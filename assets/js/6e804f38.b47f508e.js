"use strict";(self.webpackChunkcheckout_sdk_java_docs=self.webpackChunkcheckout_sdk_java_docs||[]).push([[731],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=i,b=d["".concat(u,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(b,o(o({ref:t},l),{},{components:n})):r.createElement(b,o({ref:t},l))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4798:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return l},default:function(){return d}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],s={id:"risk",title:"Risk"},u=void 0,c={unversionedId:"api/risk",id:"api/risk",isDocsHomePage:!1,title:"Risk",description:"You can find a list of request body parameters and possible outcomes here.",source:"@site/docs/api/risk.md",sourceDirName:"api",slug:"/api/risk",permalink:"/checkout-sdk-java/docs/api/risk",version:"current",frontMatter:{id:"risk",title:"Risk"},sidebar:"tutorialSidebar",previous:{title:"Reconciliation",permalink:"/checkout-sdk-java/docs/api/reconciliation"},next:{title:"Sources",permalink:"/checkout-sdk-java/docs/api/sources"}},l=[{value:"Request a pre-authentication risk scan",id:"request-a-pre-authentication-risk-scan",children:[]},{value:"Request a pre-capture risk scan",id:"request-a-pre-capture-risk-scan",children:[]}],p={toc:l};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"You can find a list of request body parameters and possible outcomes ",(0,a.kt)("a",{parentName:"p",href:"https://api-reference.checkout.com/#tag/Risk"},"here"),"."),(0,a.kt)("h2",{id:"request-a-pre-authentication-risk-scan"},"Request a pre-authentication risk scan"),(0,a.kt)("p",null,"Perform a pre-authentication fraud assessment using your defined risk settings."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'PreAuthenticationAssessmentRequest request = PreAuthenticationAssessmentRequest.builder()\n    .date(Instant.now())\n    .source(requestSource)\n    .customer(new CustomerRequest("id", "john.doe@checkout.com", "John Doe"))\n    .payment(RiskPayment.builder().psp("Checkout.com").id("78453878").build())\n    .shipping(RiskShippingDetails.builder().address(\n        Address.builder()\n            .addressLine1("Checkout.com")\n            .addressLine2("90 Tottenham Court Road")\n            .city("London")\n            .state("London")\n            .zip("W1T 4TJ")\n            .country(CountryCode.GB)\n            .build()).build())\n    .reference("ORD-1011-87AH")\n    .description("Groceries")\n    .amount(100L)\n    .currency(Currency.GBP)\n    .device(Device.builder()\n        .ip("90.197.169.245")\n        .location(Location.builder().longitude("0.1313").latitude("51.5107").build())\n        .type("Phone")\n        .os("ISO")\n        .model("iPhone X")\n        .date(Instant.now())\n        .userAgent("Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1")\n        .fingerprint("34304a9e3fg09302")\n        .build())\n    .metadata(Stream.of(\n        new AbstractMap.SimpleImmutableEntry<>("VoucherCode", "loyalty_10"),\n        new AbstractMap.SimpleImmutableEntry<>("discountApplied", "10"),\n        new AbstractMap.SimpleImmutableEntry<>("customer_id", "2190EF321"))\n        .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue)))\n    .build();\n\nPreAuthenticationAssessmentResponse response = api.riskClient().requestPreAuthenticationRiskScan(request).get();\n')),(0,a.kt)("h2",{id:"request-a-pre-capture-risk-scan"},"Request a pre-capture risk scan"),(0,a.kt)("p",null,"Perform a pre-capture fraud assessment using your defined risk settings."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'PreCaptureAssessmentRequest request = PreCaptureAssessmentRequest.builder()\n    .date(Instant.now())\n    .source(requestSource)\n    .customer(new CustomerRequest("id", "john.doe@checkout.com", "John Doe"))\n    .payment(RiskPayment.builder().psp("Checkout.com").id("78453878").build())\n    .shipping(RiskShippingDetails.builder().address(\n        Address.builder()\n            .addressLine1("Checkout.com")\n            .addressLine2("90 Tottenham Court Road")\n            .city("London")\n            .state("London")\n            .zip("W1T 4TJ")\n            .country(CountryCode.GB)\n            .build()).build())\n    .amount(100L)\n    .currency(Currency.GBP)\n    .device(Device.builder()\n        .ip("90.197.169.245")\n        .location(Location.builder().longitude("0.1313").latitude("51.5107").build())\n        .type("Phone")\n        .os("ISO")\n        .model("iPhone X")\n        .date(Instant.now())\n        .userAgent("Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1")\n        .fingerprint("34304a9e3fg09302")\n        .build())\n    .metadata(Stream.of(\n        new AbstractMap.SimpleImmutableEntry<>("VoucherCode", "loyalty_10"),\n        new AbstractMap.SimpleImmutableEntry<>("discountApplied", "10"),\n        new AbstractMap.SimpleImmutableEntry<>("customer_id", "2190EF321"))\n        .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue)))\n    .authenticationResult(AuthenticationResult.builder()\n        .attempted(true)\n        .challenged(true)\n        .liabilityShifted(true)\n        .method("3ds")\n        .succeeded(true)\n        .version("2.0")\n        .build())\n    .authorizationResult(AuthorizationResult.builder()\n        .avsCode("V")\n        .cvvResult("N")\n        .build())\n    .build();\n\nPreCaptureAssessmentResponse response = api.riskClient().requestPreCaptureRiskScan(request).get();\n')))}d.isMDXComponent=!0}}]);